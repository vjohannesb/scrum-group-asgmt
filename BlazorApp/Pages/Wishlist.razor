@page "/wishlist"
@inject IJSRuntime jsRuntime; 
@inject HttpClient Http;

<!-- Breadcrumb -->
<div class="pt-5 pb-5 breadcrumb-section">
    <div class="container d-flex justify-content-between align-items-center">
        <p>Wishlist</p>
        <nav class="breadcrumb-divider" aria-label="breadcrumb">
            <ol class="breadcrumb breadcrumb-small-text">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Wishlist</li>
            </ol>
        </nav>
    </div>
</div>

<section>
    <div class="container">
        <div class="d-flex align-items-center flex-column mt-5 pt-5">
            <p class="dark-blue b-w-play-36">
                YOUR PRODUCTS 
                <span class="teal">WHISHLIST</span>
            </p>
            <img class="d-block mb-5" src="/img/zigzag.svg" alt="pattern">
        </div>
        <div class="row">            
            @if (_productModels == null)
            {
                <div class="col">
                    <p>Loading...</p>
                </div>
            }
            else
            {
                @if (_productModels.Count < 1)
                {
                    <div class="col">
                        <p>No products available...</p>
                    </div>
                }
                else
                {
                    @foreach (var productModel in _productModels)
                    {
                        <div class="col-3 ">
                        <div class="remove-top rounded-top d-flex align-items-center">
                            <i class=" mx-4 fas dark-gray fa-times"></i>
                            <span class="roboto dark-gray">Remove item</span>
                        </div>
                            <ProductCard Product="@productModel" @bind-ModalProduct="_modalProduct"/>
                        </div>
                    }
                }
            }

        </div>

       
    </div>

</section>
@code {
    private ProductModel _modalProduct;

    private List<ProductModel> _productModels;

    protected override async Task OnInitializedAsync()
    {
        var module = await jsRuntime.InvokeAsync<IJSObjectReference>("import", "./src/js/shop-slider.js");
        _modalProduct = new ProductModel();

        await GetWishlistItems();
    }

   private async Task GetWishlistItems()
    {
        var response = await Http.GetFromJsonAsync<IEnumerable<ProductModel>>("https://localhost:44306/api/products/getWishlist");

        //var response2 = await apiService.SendToAPIAsync(HttpMethod.Get, apiService.ProductModelsWishlistUrl);
        if (response != null) {
            Console.WriteLine("dig");
            _productModels = response.ToList();
        }
        else
        {
            Console.WriteLine("Successfully registered user!");
            _productModels = new List<ProductModel>();
        }
    }
}