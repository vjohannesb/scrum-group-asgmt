@page "/search"
@page "/search/{searchString}"
@inject HttpClient Http;

<div class="container mt-5">

    @if (_products == null)
    {
        <p class="mt-2"><em>Search for a product...</em></p>
    }
    else if (_products.Count == 0)
    {
        <p class="mt-2"><em>No products found...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Rating</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in _products)
                {
                    <tr>
                        <td>@product.ProductName</td>
                        <td>$@product.Price</td>
                        <td>@product.Rating/5</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>


@code {
    [Parameter]
    public string searchString { get; set; }

    private List<Product> _products;

    private async Task SearchProducts()
    {
        _products = await Http.GetFromJsonAsync<List<Product>>($"https://localhost:44306/api/Products/search?searchString={searchString}");
    }

    protected override async Task OnParametersSetAsync()
    {
        await SearchProducts();
    }
}
