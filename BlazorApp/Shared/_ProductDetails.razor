@if (Product != null)
{

    <div class="row main-row">
        <!-- Image Column -->
        <div class="col-5 image-column">
            <div class="product-image-display w-100">
                <img src="https://via.placeholder.com/360" alt="Placeholder">
            </div>

            <div class="product-image-selection w-100">
                <img src="https://via.placeholder.com/70" alt="Placeholder">
                <img src="https://via.placeholder.com/70" alt="Placeholder">
                <img src="https://via.placeholder.com/70" alt="Placeholder">
                <img src="https://via.placeholder.com/70" alt="Placeholder">
            </div>
        </div>

        <!-- Info Column -->
        <div class="col-7 info-column">
            <!-- Review + Logo Row -->
            <div class="row review-brand-row">
                <div class="col-3">
                    <_Rating Stars=@(Product.Rating ?? 0) />
                </div>
                <div class="col">
                    <div class="reviews-amount">(2 customer reviews)</div>
                </div>
                <div class="col logo">
                    <img src="/src/img/brands/bexim.svg" alt="Bexim Logo">
                </div>
            </div>

            <!-- Title Row -->
            <div class="row title-row">
                <h4 class="teal product-title">@Product.ProductName</h4>
            </div>

            <!-- Description Row -->
            <div class="row description-row">
                <p>
                    @Product.ProductDescription
                </p>
            </div>

            <!-- Price + Stock Row -->
            <div class="row mb-3 g-0 price-status-row">
                <div class="col-3">
                    <p class="current-price">@Product.Price</p>
                </div>

                <div class="col-3">
                    <div class="old-price">@Product.Price</div>
                </div>

                <div class="col-3">
                    <div class="stock-status">
                        <i class="fas fa-archive in-stock"></i>
                        In stock
                    </div>
                </div>
            </div>

            <!-- Buy + Actions Row -->
            <div class="row mb-4 buy-actions-row">
                <!--! Ska ersättas med någon annans knappar -->
                <!-- <div class="col-2">
                    <span class="quantity-selector">
                        <span class="quantity-minus">-</span>
                        <span class="quantity-current">1</span>
                        <span class="quantity-plus">+</span>
                    </span>
                </div> -->
                <img class="temp-quantity-button" src="/src/img/temp-product-quantity.svg"
                     title="Ska ersättas med någon annans modul">

            <div class="col-4 ms-3 me-3 add-to-cart" @onclick="AddToCartAsync">
                <i class="fas fa-shopping-cart"></i>
                <span>Add to cart</span>
            </div>

                <div class="col row align-items-center justify-content-center m-0 g-0">
                    <div class="col-2 me-2 color-selection-btn">
                        <img src="/src/img/shop/color-selection-circle.svg" alt="">
                    </div>

                    <div class="col-2 me-2 compare-item">
                        <span>
                            <i class="fas fa-random"></i>
                        </span>
                    </div>

                    <div class="col-2 me-2 save-item">
                        <span>
                            <i class="fas fa-heart"></i>
                        </span>
                    </div>
                </div>
            </div>

            <!-- Category Row -->
            <div class="row mb-4 pt-2 category-row">
                <div class="col">
                    <span>Category: <a href="" class="product-category">@Product.Category </a></span>
                </div>
            </div>

            <!-- Tags Row -->
            <div class="row pt-2 tags-row">
                <div class="col">
                    <span class="tags-title">Tags:</span>
                    <span class="tag-box">Fashion</span>
                    <span class="tag-box">Shoes</span>
                    <span class="tag-box">Sneakers</span>
                </div>
            </div>

            <!-- Share Row -->
            <div class="row mb-3 share-row">
                <div class="col">
                    <span>Share: </span>
                    <span class="circle circle-facebook">
                        <i class="fab fa-facebook-f"></i>
                    </span>
                    <span class="circle circle-twitter">
                        <i class="fab fa-twitter"></i>
                    </span>
                    <span class="circle circle-pinterest">
                        <i class="fab fa-pinterest-p"></i>
                    </span>
                    <span class="circle circle-linkedin">
                        <i class="fab fa-linkedin-in"></i>
                    </span>
                    <span class="circle circle-email">
                        <i class="fas fa-envelope"></i>
                    </span>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public ProductModel Product { get; set; }

    private List<Review> _reviews;

    // TODO: Hämta ProductId från Product, och Quantity från Plus-minus-komponent

    private async Task AddToCartAsync()
    {
        var currentCart = await apiService.GetFromLocalStorageAsync<List<ShoppingCartItem>>("cart");
        var currentProduct = new ShoppingCartItem { ProductId = 1, Quantity = 1 };
        if (currentCart?.Count > 0)
        {
            if (currentCart.Any(sci => sci.ProductId == 1))
            {
                currentProduct = currentCart.First(sci => sci.ProductId == 1);
                currentCart.Remove(currentProduct);
                currentProduct.Quantity += 1;
            }
            currentCart.Insert(0, currentProduct);
        }
        else
            currentCart = new List<ShoppingCartItem> { currentProduct };

        await apiService.SaveToLocalStorageAsync<List<ShoppingCartItem>>("cart", currentCart);
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    await GetReviewsAsync();
    //}

    //private async Task GetReviewsAsync()
    //{
    //    var response = await apiService.SendToAPIAsync(HttpMethod.Get, "reviewsurl...");
    //    if (response.IsSuccessStatusCode)
    //        _reviews = await response.Content.ReadFromJsonAsync<List<Review>>();
    //    else
    //    {
    //        _reviews = new List<Review>();
    //    }
    //}
}